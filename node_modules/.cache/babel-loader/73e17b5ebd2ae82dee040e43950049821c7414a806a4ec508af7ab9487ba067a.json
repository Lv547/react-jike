{"ast":null,"code":"// 和用户相关的状态管理\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { setToken as _setToken, getToken, removeToken } from '@/utils';\nimport { loginAPI, getProfileAPI } from '@/apis/user';\nconst userStore = createSlice({\n  name: \"user\",\n  // 数据状态\n  initialState: {\n    token: getToken() || '',\n    userInfo: {}\n  },\n  // 同步修改方法\n  reducers: {\n    setToken(state, action) {\n      state.token = action.payload;\n      _setToken(action.payload);\n    },\n    setUserInfo(state, action) {\n      state.userInfo = action.payload;\n    },\n    clearUserInfo(state) {\n      state.token = '';\n      state.userInfo = {};\n      removeToken();\n    }\n  }\n});\n\n// 解构出actionCreater\n\nconst {\n  setToken,\n  setUserInfo,\n  clearUserInfo\n} = userStore.actions;\n\n// 获取reducer函数\n\nconst userReducer = userStore.reducer;\n\n// 登录获取token异步方法封装\nconst fetchLogin = loginForm => {\n  return async dispatch => {\n    const res = await loginAPI(loginForm);\n    dispatch(setToken(res.data.token));\n  };\n};\n\n// 获取个人用户信息异步方法\nconst fetchUserInfo = () => {\n  return async dispatch => {\n    const res = await getProfileAPI();\n    dispatch(setUserInfo(res.data));\n  };\n};\nexport { fetchLogin, fetchUserInfo, clearUserInfo };\nexport default userReducer;","map":{"version":3,"names":["createSlice","setToken","_setToken","getToken","removeToken","loginAPI","getProfileAPI","userStore","name","initialState","token","userInfo","reducers","state","action","payload","setUserInfo","clearUserInfo","actions","userReducer","reducer","fetchLogin","loginForm","dispatch","res","data","fetchUserInfo"],"sources":["D:/BaiduNetdiskDownload/React 基础 - 配套资料/React 基础 - 配套资料/React 基础 - day09/03-code/react-jike/src/store/modules/user.js"],"sourcesContent":["// 和用户相关的状态管理\n\nimport { createSlice } from '@reduxjs/toolkit'\nimport { setToken as _setToken, getToken, removeToken } from '@/utils'\nimport { loginAPI, getProfileAPI } from '@/apis/user'\n\nconst userStore = createSlice({\n  name: \"user\",\n  // 数据状态\n  initialState: {\n    token: getToken() || '',\n    userInfo: {}\n  },\n  // 同步修改方法\n  reducers: {\n    setToken (state, action) {\n      state.token = action.payload\n      _setToken(action.payload)\n    },\n    setUserInfo (state, action) {\n      state.userInfo = action.payload\n    },\n    clearUserInfo (state) {\n      state.token = ''\n      state.userInfo = {}\n      removeToken()\n    }\n  }\n})\n\n\n// 解构出actionCreater\n\nconst { setToken, setUserInfo, clearUserInfo } = userStore.actions\n\n// 获取reducer函数\n\nconst userReducer = userStore.reducer\n\n// 登录获取token异步方法封装\nconst fetchLogin = (loginForm) => {\n  return async (dispatch) => {\n    const res = await loginAPI(loginForm)\n    dispatch(setToken(res.data.token))\n  }\n}\n\n// 获取个人用户信息异步方法\nconst fetchUserInfo = () => {\n  return async (dispatch) => {\n    const res = await getProfileAPI()\n    dispatch(setUserInfo(res.data))\n  }\n}\n\nexport { fetchLogin, fetchUserInfo, clearUserInfo }\n\nexport default userReducer"],"mappings":"AAAA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,SAAS;AACtE,SAASC,QAAQ,EAAEC,aAAa,QAAQ,aAAa;AAErD,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZ;EACAC,YAAY,EAAE;IACZC,KAAK,EAAEP,QAAQ,CAAC,CAAC,IAAI,EAAE;IACvBQ,QAAQ,EAAE,CAAC;EACb,CAAC;EACD;EACAC,QAAQ,EAAE;IACRX,QAAQA,CAAEY,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO;MAC5Bb,SAAS,CAACY,MAAM,CAACC,OAAO,CAAC;IAC3B,CAAC;IACDC,WAAWA,CAAEH,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACF,QAAQ,GAAGG,MAAM,CAACC,OAAO;IACjC,CAAC;IACDE,aAAaA,CAAEJ,KAAK,EAAE;MACpBA,KAAK,CAACH,KAAK,GAAG,EAAE;MAChBG,KAAK,CAACF,QAAQ,GAAG,CAAC,CAAC;MACnBP,WAAW,CAAC,CAAC;IACf;EACF;AACF,CAAC,CAAC;;AAGF;;AAEA,MAAM;EAAEH,QAAQ;EAAEe,WAAW;EAAEC;AAAc,CAAC,GAAGV,SAAS,CAACW,OAAO;;AAElE;;AAEA,MAAMC,WAAW,GAAGZ,SAAS,CAACa,OAAO;;AAErC;AACA,MAAMC,UAAU,GAAIC,SAAS,IAAK;EAChC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,GAAG,GAAG,MAAMnB,QAAQ,CAACiB,SAAS,CAAC;IACrCC,QAAQ,CAACtB,QAAQ,CAACuB,GAAG,CAACC,IAAI,CAACf,KAAK,CAAC,CAAC;EACpC,CAAC;AACH,CAAC;;AAED;AACA,MAAMgB,aAAa,GAAGA,CAAA,KAAM;EAC1B,OAAO,MAAOH,QAAQ,IAAK;IACzB,MAAMC,GAAG,GAAG,MAAMlB,aAAa,CAAC,CAAC;IACjCiB,QAAQ,CAACP,WAAW,CAACQ,GAAG,CAACC,IAAI,CAAC,CAAC;EACjC,CAAC;AACH,CAAC;AAED,SAASJ,UAAU,EAAEK,aAAa,EAAET,aAAa;AAEjD,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}